{"ast":null,"code":"var _jsxFileName = \"/home/jade/react-jobly/jobly-frontend/src/Components/ProfileForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport JoblyApi from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileForm({\n  user,\n  updateUser\n}) {\n  _s();\n  const INITIAL_STATE = {\n    username: user.username,\n    email: user.email,\n    password: ''\n  };\n  const [formData, setFormData] = useState(INITIAL_STATE);\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => ({\n      ...data,\n      [name]: value\n    }));\n  }\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const updatedUser = await JoblyApi.updateProfile(user.username, formData);\n    updateUser(updatedUser); // Call parent to update current user\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      value: formData.username,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      value: formData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileForm, \"Qrv4IJaUdxYqFN9++MYmDGzRf6w=\");\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["React","useState","JoblyApi","jsxDEV","_jsxDEV","ProfileForm","user","updateUser","_s","INITIAL_STATE","username","email","password","formData","setFormData","handleChange","evt","name","value","target","data","handleSubmit","preventDefault","updatedUser","updateProfile","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/jade/react-jobly/jobly-frontend/src/Components/ProfileForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport JoblyApi from '../api';\r\n\r\nfunction ProfileForm({ user, updateUser }) {\r\n  const INITIAL_STATE = { username: user.username, email: user.email, password: '' };\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setFormData(data => ({ ...data, [name]: value }));\r\n  }\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const updatedUser = await JoblyApi.updateProfile(user.username, formData);\r\n    updateUser(updatedUser);  // Call parent to update current user\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"username\" value={formData.username} onChange={handleChange} />\r\n      <input name=\"email\" value={formData.email} onChange={handleChange} />\r\n      <input name=\"password\" type=\"password\" value={formData.password} onChange={handleChange} />\r\n      <button type=\"submit\">Update</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,WAAWA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,aAAa,GAAG;IAAEC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;IAAEC,KAAK,EAAEL,IAAI,CAACK,KAAK;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAClF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACQ,aAAa,CAAC;EAEvD,SAASM,YAAYA,CAACC,GAAG,EAAE;IACzB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,GAAG,CAACG,MAAM;IAClCL,WAAW,CAACM,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACnD;EAEA,eAAeG,YAAYA,CAACL,GAAG,EAAE;IAC/BA,GAAG,CAACM,cAAc,CAAC,CAAC;IACpB,MAAMC,WAAW,GAAG,MAAMrB,QAAQ,CAACsB,aAAa,CAAClB,IAAI,CAACI,QAAQ,EAAEG,QAAQ,CAAC;IACzEN,UAAU,CAACgB,WAAW,CAAC,CAAC,CAAE;EAC5B;EAEA,oBACEnB,OAAA;IAAMqB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAC3BtB,OAAA;MAAOa,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEL,QAAQ,CAACH,QAAS;MAACiB,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3E3B,OAAA;MAAOa,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEL,QAAQ,CAACF,KAAM;MAACgB,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrE3B,OAAA;MAAOa,IAAI,EAAC,UAAU;MAACe,IAAI,EAAC,UAAU;MAACd,KAAK,EAAEL,QAAQ,CAACD,QAAS;MAACe,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3F3B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX;AAACvB,EAAA,CAvBQH,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAyBpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}