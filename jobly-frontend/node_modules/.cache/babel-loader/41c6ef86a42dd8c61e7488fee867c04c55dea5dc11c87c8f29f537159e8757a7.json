{"ast":null,"code":"var _jsxFileName = \"/home/jade/react-jobly/jobly-frontend/src/Components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport JoblyApi from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm({\n  login\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    try {\n      let token = await JoblyApi.login(formData);\n      login(token, formData.username); // Pass the username along with the token\n    } catch (err) {\n      console.error(\"Login failed:\", err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: formData.username,\n      onChange: e => setFormData({\n        ...formData,\n        username: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"G8+ryxIlt9SFoRLoAuwrR6cCScA=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","JoblyApi","jsxDEV","_jsxDEV","LoginForm","login","_s","formData","setFormData","username","password","handleSubmit","evt","preventDefault","token","err","console","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/jade/react-jobly/jobly-frontend/src/Components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport JoblyApi from \"../api\";\r\n\r\nfunction LoginForm({ login }) {\r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    try {\r\n      let token = await JoblyApi.login(formData);\r\n      login(token, formData.username);  // Pass the username along with the token\r\n    } catch (err) {\r\n      console.error(\"Login failed:\", err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"username\">Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={formData.username}\r\n        onChange={e => setFormData({ ...formData, username: e.target.value })}\r\n      />\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={formData.password}\r\n        onChange={e => setFormData({ ...formData, password: e.target.value })}\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IAAES,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAExE,eAAeC,YAAYA,CAACC,GAAG,EAAE;IAC/BA,GAAG,CAACC,cAAc,CAAC,CAAC;IACpB,IAAI;MACF,IAAIC,KAAK,GAAG,MAAMb,QAAQ,CAACI,KAAK,CAACE,QAAQ,CAAC;MAC1CF,KAAK,CAACS,KAAK,EAAEP,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAAE;IACpC,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;IACrC;EACF;EAEA,oBACEZ,OAAA;IAAMe,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BhB,OAAA;MAAOiB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3CrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEpB,QAAQ,CAACE,QAAS;MACzBmB,QAAQ,EAAEC,CAAC,IAAIrB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,QAAQ,EAAEoB,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACFrB,OAAA;MAAOiB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3CrB,OAAA;MACEsB,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEpB,QAAQ,CAACG,QAAS;MACzBkB,QAAQ,EAAEC,CAAC,IAAIrB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,QAAQ,EAAEmB,CAAC,CAACC,MAAM,CAACH;MAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACFrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAAClB,EAAA,CAhCQF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAkClB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}