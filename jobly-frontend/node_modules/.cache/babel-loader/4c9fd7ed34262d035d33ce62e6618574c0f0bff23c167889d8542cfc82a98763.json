{"ast":null,"code":"var _jsxFileName = \"/home/jade/react-jobly/jobly-frontend/src/routes/JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport JoblyApi from '../api';\nimport JobCard from '../Components/JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobList() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [applications, setApplications] = useState(new Set());\n\n  // Fetch the jobs when the component mounts\n  useEffect(() => {\n    async function fetchJobs() {\n      const jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    }\n    fetchJobs();\n  }, []);\n\n  // Handle job application\n  async function applyToJob(id) {\n    await JoblyApi.applyToJob(id);\n    setApplications(apps => new Set(apps.add(id)));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job,\n      hasApplied: applications.has(job.id),\n      applyToJob: applyToJob\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(JobList, \"r7lVxig2gfkrSc2t//8Oj8KWPEs=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","JoblyApi","JobCard","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","applications","setApplications","Set","fetchJobs","getJobs","applyToJob","id","apps","add","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","hasApplied","has","_c","$RefreshReg$"],"sources":["/home/jade/react-jobly/jobly-frontend/src/routes/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport JoblyApi from '../api';\r\nimport JobCard from '../Components/JobCard';\r\n\r\nfunction JobList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [applications, setApplications] = useState(new Set());\r\n\r\n  // Fetch the jobs when the component mounts\r\n  useEffect(() => {\r\n    async function fetchJobs() {\r\n      const jobs = await JoblyApi.getJobs();\r\n      setJobs(jobs);\r\n    }\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  // Handle job application\r\n  async function applyToJob(id) {\r\n    await JoblyApi.applyToJob(id);\r\n    setApplications(apps => new Set(apps.add(id)));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Job Listings</h1>\r\n      {jobs.map(job => (\r\n        <JobCard \r\n          key={job.id} \r\n          job={job} \r\n          hasApplied={applications.has(job.id)} \r\n          applyToJob={applyToJob} \r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAIY,GAAG,CAAC,CAAC,CAAC;;EAE3D;EACAX,SAAS,CAAC,MAAM;IACd,eAAeY,SAASA,CAAA,EAAG;MACzB,MAAML,IAAI,GAAG,MAAMN,QAAQ,CAACY,OAAO,CAAC,CAAC;MACrCL,OAAO,CAACD,IAAI,CAAC;IACf;IACAK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,eAAeE,UAAUA,CAACC,EAAE,EAAE;IAC5B,MAAMd,QAAQ,CAACa,UAAU,CAACC,EAAE,CAAC;IAC7BL,eAAe,CAACM,IAAI,IAAI,IAAIL,GAAG,CAACK,IAAI,CAACC,GAAG,CAACF,EAAE,CAAC,CAAC,CAAC;EAChD;EAEA,oBACEX,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBf,IAAI,CAACgB,GAAG,CAACC,GAAG,iBACXpB,OAAA,CAACF,OAAO;MAENsB,GAAG,EAAEA,GAAI;MACTC,UAAU,EAAEhB,YAAY,CAACiB,GAAG,CAACF,GAAG,CAACT,EAAE,CAAE;MACrCD,UAAU,EAAEA;IAAW,GAHlBU,GAAG,CAACT,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CAhCQD,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAkChB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}