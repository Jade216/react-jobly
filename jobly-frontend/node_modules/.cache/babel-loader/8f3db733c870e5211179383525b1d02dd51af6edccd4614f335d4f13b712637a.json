{"ast":null,"code":"var _jsxFileName = \"/home/jade/react-jobly/jobly-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Navbar from './Components/Navbar';\nimport JoblyApi from \"./api\";\nimport CompanyList from './routes/CompanyList';\nimport JobList from \"./routes/JobList\";\nimport CompanyDetail from \"./routes/CompanyDetail\";\nimport LoginForm from './Components/LoginForm';\nimport ProfileForm from \"./Components/ProfileForm\";\nimport HomePage from './Components/HomePage';\nimport SignupForm from \"./Components/SignupForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  async function handleSignup(formData) {\n    try {\n      let token = await JoblyApi.signup(formData);\n      setToken(token);\n      setCurrentUser(formData.username); // Set the user after signing up\n    } catch (err) {\n      console.error(\"Signup failed\", err);\n    }\n  }\n  function login(token) {\n    setToken(token);\n    JoblyApi.token = token;\n  }\n  ;\n  useEffect(() => {\n    async function getCompanies() {\n      let companies = await JoblyApi.getCompanies();\n      setCompanies(companies);\n    }\n    getCompanies();\n  }, []);\n  useEffect(() => {\n    async function getJobs() {\n      let jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    }\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignupForm, {\n          signup: handleSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/companies\",\n        element: token ? /*#__PURE__*/_jsxDEV(CompanyList, {\n          companies: companies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfileForm, {\n          user: currentUser,\n          updateUser: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/jobs\",\n        element: /*#__PURE__*/_jsxDEV(JobList, {\n          jobs: jobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/companies/:handle\",\n        element: /*#__PURE__*/_jsxDEV(CompanyDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"celJTWafynkBkW5Bgn6AaSp49mM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Navigate","Navbar","JoblyApi","CompanyList","JobList","CompanyDetail","LoginForm","ProfileForm","HomePage","SignupForm","jsxDEV","_jsxDEV","App","_s","companies","setCompanies","jobs","setJobs","token","setToken","currentUser","setCurrentUser","handleSignup","formData","signup","username","err","console","error","login","getCompanies","getJobs","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","user","updateUser","_c","$RefreshReg$"],"sources":["/home/jade/react-jobly/jobly-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Navbar from './Components/Navbar';\nimport JoblyApi from \"./api\";\nimport CompanyList from './routes/CompanyList';\nimport JobList from \"./routes/JobList\";\nimport CompanyDetail from \"./routes/CompanyDetail\";\nimport LoginForm from './Components/LoginForm';\nimport ProfileForm from \"./Components/ProfileForm\";\nimport HomePage from './Components/HomePage';\nimport SignupForm from \"./Components/SignupForm\";\n\n\n\nfunction App() {\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  async function handleSignup(formData) {\n    try {\n      let token = await JoblyApi.signup(formData);\n      setToken(token);\n      setCurrentUser(formData.username); // Set the user after signing up\n    } catch (err) {\n      console.error(\"Signup failed\", err);\n    }\n  }\n\n  function login(token) {\n    setToken(token);\n    JoblyApi.token = token;\n  };\n\n  useEffect(() => {\n    async function getCompanies() {\n      let companies = await JoblyApi.getCompanies();\n      setCompanies(companies);\n    }\n    getCompanies();\n  }, []);\n\n  useEffect(() => {\n    async function getJobs() {\n      let jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    }\n    getJobs();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Routes>\n         <Route path=\"/signup\" element={<SignupForm signup={handleSignup} />} />\n\n         <Route path=\"/\" element={<HomePage />} />\n\n        <Route path=\"/login\" element={<LoginForm login={login} />} />\n        <Route \n          path=\"/companies\" \n          element={token ? <CompanyList companies={companies} /> : <Navigate to=\"/login\" />} \n        />\n        <Route\n          path=\"/profile\" \n          element={<ProfileForm user={currentUser} updateUser={setCurrentUser} />} \n        />\n        <Route path=\"/jobs\" element={<JobList jobs={jobs} />} />\n        <Route path=\"/companies/:handle\" element={<CompanyDetail />} />\n      </Routes>\n    </BrowserRouter>\n  );\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}