{"ast":null,"code":"var _jsxFileName = \"/home/jade/react-jobly/jobly-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\n// import { useNavigate } from \"react-router-dom\";\n// import Navbar from './Components/Navbar';\n// import JoblyApi from \"./api\";\n// import CompanyList from './routes/CompanyList';\n// import JobList from \"./routes/JobList\";\n// import CompanyDetail from \"./routes/CompanyDetail\";\n// import LoginForm from './Components/LoginForm';\n// import ProfileForm from \"./Components/ProfileForm\";\n// import HomePage from './Components/HomePage';\n// import SignupForm from \"./Components/SignupForm\";\n\n// function App() {\n//   const [companies, setCompanies] = useState([]);\n//   const [jobs, setJobs] = useState([]);\n//   const [token, setToken] = useState(null);\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   async function handleSignup(signupData) {\n//     try {\n//       let token = await JoblyApi.signup(signupData);\n//       setToken(token); // Set token in state to log in the user\n//       JoblyApi.token = token; // Store the token\n//       setCurrentUser(signupData.username); // Update current user in state\n//       navigate(\"/\"); // Redirect to home or profile page\n//     } catch (errors) {\n//       console.error(\"Signup failed\", errors);\n//     }\n//   }\n\n//   function login(token) {\n//     setToken(token);\n//     JoblyApi.token = token;\n//   };\n\n//   useEffect(() => {\n//     async function getCompanies() {\n//       let companies = await JoblyApi.getCompanies();\n//       setCompanies(companies);\n//     }\n//     getCompanies();\n//   }, []);\n\n//   useEffect(() => {\n//     async function getJobs() {\n//       let jobs = await JoblyApi.getJobs();\n//       setJobs(jobs);\n//     }\n//     getJobs();\n//   }, []);\n\n//   return (\n//     <BrowserRouter>\n//       <Navbar />\n//       <Routes>\n//          <Route path=\"/signup\" element={<SignupForm signup={handleSignup} />} />\n\n//          <Route path=\"/\" element={<HomePage />} />\n\n//         <Route path=\"/login\" element={<LoginForm login={login} />} />\n//         <Route \n//           path=\"/companies\" \n//           element={token ? <CompanyList companies={companies} /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route\n//           path=\"/profile\" \n//           element={<ProfileForm user={currentUser} updateUser={setCurrentUser} />} \n//         />\n//         <Route path=\"/jobs\" element={<JobList jobs={jobs} />} />\n//         <Route path=\"/companies/:handle\" element={<CompanyDetail />} />\n//       </Routes>\n//     </BrowserRouter>\n//   );\n\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Navbar from './Components/Navbar';\nimport JoblyApi from \"./api\";\nimport CompanyList from './routes/CompanyList';\nimport JobList from './routes/JobList';\nimport CompanyDetail from './routes/CompanyDetail';\nimport LoginForm from './Components/LoginForm';\nimport ProfileForm from \"./Components/ProfileForm\";\nimport HomePage from './Components/HomePage';\nimport SignupForm from \"./Components/SignupForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Load token from localStorage when the component mounts\n  useEffect(() => {\n    const savedToken = localStorage.getItem(\"token\");\n    if (savedToken) {\n      setToken(savedToken);\n      JoblyApi.token = savedToken;\n      async function fetchUser() {\n        const username = JSON.parse(atob(savedToken.split('.')[1])).username; // decode username from token\n        const user = await JoblyApi.getCurrentUser(username);\n        setCurrentUser(user);\n      }\n      fetchUser();\n    }\n  }, []);\n\n  // Login function that also stores token in localStorage\n  async function login(token) {\n    setToken(token);\n    JoblyApi.token = token || localStorage.getItem(\"token\"); // Ensure token is set correctly\n    const user = await JoblyApi.getCurrentUser(); // Fetch the current user\n    setCurrentUser(user); // Set the logged-in user in state\n  }\n\n  // Logout function that clears token and user from state and localStorage\n  function logout() {\n    setToken(null);\n    setCurrentUser(null);\n    JoblyApi.token = null;\n    localStorage.removeItem(\"token\");\n  }\n\n  // Handle user signup and store token\n  async function handleSignup(signupData) {\n    let token = await JoblyApi.signup(signupData);\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    JoblyApi.token = token;\n    const username = JSON.parse(atob(token.split('.')[1])).username;\n    const user = await JoblyApi.getCurrentUser(username);\n    setCurrentUser(user);\n  }\n  useEffect(() => {\n    async function getCompanies() {\n      let companies = await JoblyApi.getCompanies();\n      setCompanies(companies);\n    }\n    getCompanies();\n  }, []);\n  useEffect(() => {\n    async function getJobs() {\n      let jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    }\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentUser: currentUser,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignupForm, {\n          signup: handleSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/companies\",\n        element: token ? /*#__PURE__*/_jsxDEV(CompanyList, {\n          companies: companies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: currentUser ? /*#__PURE__*/_jsxDEV(ProfileForm, {\n          user: currentUser,\n          updateUser: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 120\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/jobs\",\n        element: token ? /*#__PURE__*/_jsxDEV(JobList, {\n          jobs: jobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/companies/:handle\",\n        element: /*#__PURE__*/_jsxDEV(CompanyDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mnjs7SxCXb1F60aaeRl/PUw4m3E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Navigate","Navbar","JoblyApi","CompanyList","JobList","CompanyDetail","LoginForm","ProfileForm","HomePage","SignupForm","jsxDEV","_jsxDEV","App","_s","companies","setCompanies","jobs","setJobs","token","setToken","currentUser","setCurrentUser","savedToken","localStorage","getItem","fetchUser","username","JSON","parse","atob","split","user","getCurrentUser","login","logout","removeItem","handleSignup","signupData","signup","setItem","getCompanies","getJobs","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","updateUser","_c","$RefreshReg$"],"sources":["/home/jade/react-jobly/jobly-frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\n// import { useNavigate } from \"react-router-dom\";\n// import Navbar from './Components/Navbar';\n// import JoblyApi from \"./api\";\n// import CompanyList from './routes/CompanyList';\n// import JobList from \"./routes/JobList\";\n// import CompanyDetail from \"./routes/CompanyDetail\";\n// import LoginForm from './Components/LoginForm';\n// import ProfileForm from \"./Components/ProfileForm\";\n// import HomePage from './Components/HomePage';\n// import SignupForm from \"./Components/SignupForm\";\n\n\n\n// function App() {\n//   const [companies, setCompanies] = useState([]);\n//   const [jobs, setJobs] = useState([]);\n//   const [token, setToken] = useState(null);\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   async function handleSignup(signupData) {\n//     try {\n//       let token = await JoblyApi.signup(signupData);\n//       setToken(token); // Set token in state to log in the user\n//       JoblyApi.token = token; // Store the token\n//       setCurrentUser(signupData.username); // Update current user in state\n//       navigate(\"/\"); // Redirect to home or profile page\n//     } catch (errors) {\n//       console.error(\"Signup failed\", errors);\n//     }\n//   }\n  \n\n//   function login(token) {\n//     setToken(token);\n//     JoblyApi.token = token;\n//   };\n\n//   useEffect(() => {\n//     async function getCompanies() {\n//       let companies = await JoblyApi.getCompanies();\n//       setCompanies(companies);\n//     }\n//     getCompanies();\n//   }, []);\n\n//   useEffect(() => {\n//     async function getJobs() {\n//       let jobs = await JoblyApi.getJobs();\n//       setJobs(jobs);\n//     }\n//     getJobs();\n//   }, []);\n\n//   return (\n//     <BrowserRouter>\n//       <Navbar />\n//       <Routes>\n//          <Route path=\"/signup\" element={<SignupForm signup={handleSignup} />} />\n\n//          <Route path=\"/\" element={<HomePage />} />\n\n//         <Route path=\"/login\" element={<LoginForm login={login} />} />\n//         <Route \n//           path=\"/companies\" \n//           element={token ? <CompanyList companies={companies} /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route\n//           path=\"/profile\" \n//           element={<ProfileForm user={currentUser} updateUser={setCurrentUser} />} \n//         />\n//         <Route path=\"/jobs\" element={<JobList jobs={jobs} />} />\n//         <Route path=\"/companies/:handle\" element={<CompanyDetail />} />\n//       </Routes>\n//     </BrowserRouter>\n//   );\n  \n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Navbar from './Components/Navbar';\nimport JoblyApi from \"./api\";\nimport CompanyList from './routes/CompanyList';\nimport JobList from './routes/JobList';\nimport CompanyDetail from './routes/CompanyDetail';\nimport LoginForm from './Components/LoginForm';\nimport ProfileForm from \"./Components/ProfileForm\";\nimport HomePage from './Components/HomePage';\nimport SignupForm from \"./Components/SignupForm\";\n\nfunction App() {\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Load token from localStorage when the component mounts\n  useEffect(() => {\n    const savedToken = localStorage.getItem(\"token\");\n    if (savedToken) {\n      setToken(savedToken);\n      JoblyApi.token = savedToken;\n      async function fetchUser() {\n        const username = JSON.parse(atob(savedToken.split('.')[1])).username; // decode username from token\n        const user = await JoblyApi.getCurrentUser(username);\n        setCurrentUser(user);\n      }\n      fetchUser();\n    }\n  }, []);\n\n  // Login function that also stores token in localStorage\n  async function login(token) {\n    setToken(token);\n    JoblyApi.token = token || localStorage.getItem(\"token\"); // Ensure token is set correctly\n    const user = await JoblyApi.getCurrentUser(); // Fetch the current user\n    setCurrentUser(user);  // Set the logged-in user in state\n  }\n\n  // Logout function that clears token and user from state and localStorage\n  function logout() {\n    setToken(null);\n    setCurrentUser(null);\n    JoblyApi.token = null;\n    localStorage.removeItem(\"token\");\n  }\n\n  // Handle user signup and store token\n  async function handleSignup(signupData) {\n    let token = await JoblyApi.signup(signupData);\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    JoblyApi.token = token;\n    const username = JSON.parse(atob(token.split('.')[1])).username;\n    const user = await JoblyApi.getCurrentUser(username);\n    setCurrentUser(user);\n  }\n\n  useEffect(() => {\n    async function getCompanies() {\n      let companies = await JoblyApi.getCompanies();\n      setCompanies(companies);\n    }\n    getCompanies();\n  }, []);\n\n  useEffect(() => {\n    async function getJobs() {\n      let jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    }\n    getJobs();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Navbar currentUser={currentUser} logout={logout} />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/signup\" element={<SignupForm signup={handleSignup} />} />\n        <Route path=\"/login\" element={<LoginForm login={login} />} />\n        <Route path=\"/companies\" element={token ? <CompanyList companies={companies} /> : <Navigate to=\"/login\" />} />\n        <Route path=\"/profile\" element={currentUser ? <ProfileForm user={currentUser} updateUser={setCurrentUser} /> : <Navigate to=\"/login\" />} />\n        <Route path=\"/jobs\" element={token ? <JobList jobs={jobs} /> : <Navigate to=\"/login\" />} />\n        <Route path=\"/companies/:handle\" element={<CompanyDetail />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}