{"ast":null,"code":"var _jsxFileName = \"/home/jade/react-jobly/jobly-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\n// import { useNavigate } from \"react-router-dom\";\n// import Navbar from './Components/Navbar';\n// import JoblyApi from \"./api\";\n// import CompanyList from './routes/CompanyList';\n// import JobList from \"./routes/JobList\";\n// import CompanyDetail from \"./routes/CompanyDetail\";\n// import LoginForm from './Components/LoginForm';\n// import ProfileForm from \"./Components/ProfileForm\";\n// import HomePage from './Components/HomePage';\n// import SignupForm from \"./Components/SignupForm\";\n\n// function App() {\n//   const [companies, setCompanies] = useState([]);\n//   const [jobs, setJobs] = useState([]);\n//   const [token, setToken] = useState(null);\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   async function handleSignup(signupData) {\n//     try {\n//       let token = await JoblyApi.signup(signupData);\n//       setToken(token); // Set token in state to log in the user\n//       JoblyApi.token = token; // Store the token\n//       setCurrentUser(signupData.username); // Update current user in state\n//       navigate(\"/\"); // Redirect to home or profile page\n//     } catch (errors) {\n//       console.error(\"Signup failed\", errors);\n//     }\n//   }\n\n//   function login(token) {\n//     setToken(token);\n//     JoblyApi.token = token;\n//   };\n\n//   useEffect(() => {\n//     async function getCompanies() {\n//       let companies = await JoblyApi.getCompanies();\n//       setCompanies(companies);\n//     }\n//     getCompanies();\n//   }, []);\n\n//   useEffect(() => {\n//     async function getJobs() {\n//       let jobs = await JoblyApi.getJobs();\n//       setJobs(jobs);\n//     }\n//     getJobs();\n//   }, []);\n\n//   return (\n//     <BrowserRouter>\n//       <Navbar />\n//       <Routes>\n//          <Route path=\"/signup\" element={<SignupForm signup={handleSignup} />} />\n\n//          <Route path=\"/\" element={<HomePage />} />\n\n//         <Route path=\"/login\" element={<LoginForm login={login} />} />\n//         <Route \n//           path=\"/companies\" \n//           element={token ? <CompanyList companies={companies} /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route\n//           path=\"/profile\" \n//           element={<ProfileForm user={currentUser} updateUser={setCurrentUser} />} \n//         />\n//         <Route path=\"/jobs\" element={<JobList jobs={jobs} />} />\n//         <Route path=\"/companies/:handle\" element={<CompanyDetail />} />\n//       </Routes>\n//     </BrowserRouter>\n//   );\n\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Navbar from './Components/Navbar';\nimport JoblyApi from \"./api\";\nimport CompanyList from './routes/CompanyList';\nimport JobList from './routes/JobList';\nimport CompanyDetail from './routes/CompanyDetail';\nimport LoginForm from './Components/LoginForm';\nimport ProfileForm from \"./Components/ProfileForm\";\nimport HomePage from './Components/HomePage';\nimport SignupForm from \"./Components/SignupForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null); // Load token from local storage\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    if (token) {\n      JoblyApi.token = token;\n      async function fetchUser() {\n        const user = await JoblyApi.getCurrentUser(); // Add username if required\n        setCurrentUser(user); // Set the logged-in user in state\n      }\n      fetchUser();\n    }\n  }, [token]);\n  function login(token) {\n    setToken(token);\n    localStorage.setItem(\"token\", token); // Store token in local storage\n  }\n  function logout() {\n    setToken(null);\n    setCurrentUser(null);\n    JoblyApi.token = null;\n    localStorage.removeItem(\"token\"); // Clear token from local storage\n  }\n  async function handleSignup(signupData) {\n    let token = await JoblyApi.signup(signupData);\n    setToken(token);\n    localStorage.setItem(\"token\", token); // Store token in local storage\n  }\n  useEffect(() => {\n    async function getCompanies() {\n      let companies = await JoblyApi.getCompanies();\n      setCompanies(companies);\n    }\n    getCompanies();\n  }, []);\n  useEffect(() => {\n    async function getJobs() {\n      let jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    }\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentUser: currentUser,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignupForm, {\n          signup: handleSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/companies\",\n        element: token ? /*#__PURE__*/_jsxDEV(CompanyList, {\n          companies: companies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfileForm, {\n          user: currentUser,\n          updateUser: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/jobs\",\n        element: /*#__PURE__*/_jsxDEV(JobList, {\n          jobs: jobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/companies/:handle\",\n        element: /*#__PURE__*/_jsxDEV(CompanyDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zfmBVjqv2P8y8uMCDdRIPALyt5I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Route","Routes","Navigate","Navbar","JoblyApi","CompanyList","JobList","CompanyDetail","LoginForm","ProfileForm","HomePage","SignupForm","jsxDEV","_jsxDEV","App","_s","companies","setCompanies","jobs","setJobs","token","setToken","localStorage","getItem","currentUser","setCurrentUser","fetchUser","user","getCurrentUser","login","setItem","logout","removeItem","handleSignup","signupData","signup","getCompanies","getJobs","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","updateUser","_c","$RefreshReg$"],"sources":["/home/jade/react-jobly/jobly-frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\n// import { useNavigate } from \"react-router-dom\";\n// import Navbar from './Components/Navbar';\n// import JoblyApi from \"./api\";\n// import CompanyList from './routes/CompanyList';\n// import JobList from \"./routes/JobList\";\n// import CompanyDetail from \"./routes/CompanyDetail\";\n// import LoginForm from './Components/LoginForm';\n// import ProfileForm from \"./Components/ProfileForm\";\n// import HomePage from './Components/HomePage';\n// import SignupForm from \"./Components/SignupForm\";\n\n\n\n// function App() {\n//   const [companies, setCompanies] = useState([]);\n//   const [jobs, setJobs] = useState([]);\n//   const [token, setToken] = useState(null);\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   async function handleSignup(signupData) {\n//     try {\n//       let token = await JoblyApi.signup(signupData);\n//       setToken(token); // Set token in state to log in the user\n//       JoblyApi.token = token; // Store the token\n//       setCurrentUser(signupData.username); // Update current user in state\n//       navigate(\"/\"); // Redirect to home or profile page\n//     } catch (errors) {\n//       console.error(\"Signup failed\", errors);\n//     }\n//   }\n  \n\n//   function login(token) {\n//     setToken(token);\n//     JoblyApi.token = token;\n//   };\n\n//   useEffect(() => {\n//     async function getCompanies() {\n//       let companies = await JoblyApi.getCompanies();\n//       setCompanies(companies);\n//     }\n//     getCompanies();\n//   }, []);\n\n//   useEffect(() => {\n//     async function getJobs() {\n//       let jobs = await JoblyApi.getJobs();\n//       setJobs(jobs);\n//     }\n//     getJobs();\n//   }, []);\n\n//   return (\n//     <BrowserRouter>\n//       <Navbar />\n//       <Routes>\n//          <Route path=\"/signup\" element={<SignupForm signup={handleSignup} />} />\n\n//          <Route path=\"/\" element={<HomePage />} />\n\n//         <Route path=\"/login\" element={<LoginForm login={login} />} />\n//         <Route \n//           path=\"/companies\" \n//           element={token ? <CompanyList companies={companies} /> : <Navigate to=\"/login\" />} \n//         />\n//         <Route\n//           path=\"/profile\" \n//           element={<ProfileForm user={currentUser} updateUser={setCurrentUser} />} \n//         />\n//         <Route path=\"/jobs\" element={<JobList jobs={jobs} />} />\n//         <Route path=\"/companies/:handle\" element={<CompanyDetail />} />\n//       </Routes>\n//     </BrowserRouter>\n//   );\n  \n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Navbar from './Components/Navbar';\nimport JoblyApi from \"./api\";\nimport CompanyList from './routes/CompanyList';\nimport JobList from './routes/JobList';\nimport CompanyDetail from './routes/CompanyDetail';\nimport LoginForm from './Components/LoginForm';\nimport ProfileForm from \"./Components/ProfileForm\";\nimport HomePage from './Components/HomePage';\nimport SignupForm from \"./Components/SignupForm\";\n\nfunction App() {\n  const [companies, setCompanies] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null); // Load token from local storage\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    if (token) {\n      JoblyApi.token = token;\n      async function fetchUser() {\n        const user = await JoblyApi.getCurrentUser(); // Add username if required\n        setCurrentUser(user); // Set the logged-in user in state\n      }\n      fetchUser();\n    }\n  }, [token]);\n\n  function login(token) {\n    setToken(token);\n    localStorage.setItem(\"token\", token); // Store token in local storage\n  }\n\n  function logout() {\n    setToken(null);\n    setCurrentUser(null);\n    JoblyApi.token = null;\n    localStorage.removeItem(\"token\"); // Clear token from local storage\n  }\n\n  async function handleSignup(signupData) {\n    let token = await JoblyApi.signup(signupData);\n    setToken(token);\n    localStorage.setItem(\"token\", token); // Store token in local storage\n  }\n\n  useEffect(() => {\n    async function getCompanies() {\n      let companies = await JoblyApi.getCompanies();\n      setCompanies(companies);\n    }\n    getCompanies();\n  }, []);\n\n  useEffect(() => {\n    async function getJobs() {\n      let jobs = await JoblyApi.getJobs();\n      setJobs(jobs);\n    }\n    getJobs();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Navbar currentUser={currentUser} logout={logout} />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/signup\" element={<SignupForm signup={handleSignup} />} />\n        <Route path=\"/login\" element={<LoginForm login={login} />} />\n        <Route path=\"/companies\" element={token ? <CompanyList companies={companies} /> : <Navigate to=\"/login\" />} />\n        <Route path=\"/profile\" element={<ProfileForm user={currentUser} updateUser={setCurrentUser} />} />\n        <Route path=\"/jobs\" element={<JobList jobs={jobs} />} />\n        <Route path=\"/companies/:handle\" element={<CompanyDetail />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}