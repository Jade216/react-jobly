{"ast":null,"code":"var _jsxFileName = \"/home/jade/react-jobly/jobly-frontend/src/routes/CompanyDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api\";\nimport JobCard from \"../Components/JobCard\"; // If you are reusing JobCard from JobList\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyDetail() {\n  _s();\n  const {\n    handle\n  } = useParams(); // Get company handle from the route\n  const [company, setCompany] = useState(null);\n  useEffect(() => {\n    async function fetchCompany() {\n      const fetchedCompany = await JoblyApi.getCompany(handle);\n      setCompany(fetchedCompany);\n    }\n    fetchCompany();\n  }, [handle]);\n  if (!company) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: company.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: company.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), company.jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job,\n      hasApplied: false,\n      applyToJob: () => {}\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) // Adjust accordingly\n    )]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyDetail, \"iXW0sHYhmtaDyknNWiCsI22xi70=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetail;\nexport default CompanyDetail;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","JoblyApi","JobCard","jsxDEV","_jsxDEV","CompanyDetail","_s","handle","company","setCompany","fetchCompany","fetchedCompany","getCompany","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","jobs","map","job","hasApplied","applyToJob","id","_c","$RefreshReg$"],"sources":["/home/jade/react-jobly/jobly-frontend/src/routes/CompanyDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport JoblyApi from \"../api\";\r\nimport JobCard from \"../Components/JobCard\"; // If you are reusing JobCard from JobList\r\n\r\nfunction CompanyDetail() {\r\n  const { handle } = useParams();  // Get company handle from the route\r\n  const [company, setCompany] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchCompany() {\r\n      const fetchedCompany = await JoblyApi.getCompany(handle);\r\n      setCompany(fetchedCompany);\r\n    }\r\n    fetchCompany();\r\n  }, [handle]);\r\n\r\n  if (!company) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{company.name}</h1>\r\n      <p>{company.description}</p>\r\n      {company.jobs.map(job => (\r\n        <JobCard key={job.id} job={job} hasApplied={false} applyToJob={() => {}} />  // Adjust accordingly\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,OAAO,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAE;EACjC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,eAAeW,YAAYA,CAAA,EAAG;MAC5B,MAAMC,cAAc,GAAG,MAAMV,QAAQ,CAACW,UAAU,CAACL,MAAM,CAAC;MACxDE,UAAU,CAACE,cAAc,CAAC;IAC5B;IACAD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACC,OAAO,EAAE,oBAAOJ,OAAA;IAAAS,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEtC,oBACEb,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAKL,OAAO,CAACU;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBb,OAAA;MAAAS,QAAA,EAAIL,OAAO,CAACW;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BT,OAAO,CAACY,IAAI,CAACC,GAAG,CAACC,GAAG,iBACnBlB,OAAA,CAACF,OAAO;MAAcoB,GAAG,EAAEA,GAAI;MAACC,UAAU,EAAE,KAAM;MAACC,UAAU,EAAEA,CAAA,KAAM,CAAC;IAAE,GAA1DF,GAAG,CAACG,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsD,CAAC,CAAE;IAC9E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACX,EAAA,CAvBQD,aAAa;EAAA,QACDL,SAAS;AAAA;AAAA0B,EAAA,GADrBrB,aAAa;AAyBtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}